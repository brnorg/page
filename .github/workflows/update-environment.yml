name: Update Environment

on:
  workflow_dispatch:
    inputs:
      pat:
        description: 'Personal Access Token'
        required: true
      repository:
        description: 'Repository name (owner/repo)'
        required: true
      structure:
        description: 'Path to the environment structure JSON file'
        required: true

jobs:
  update-environment:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: write - package-lock.josn
        run: |
          # Nome do arquivo
          FILE="package-lock.json"
          
          # Verifica se o arquivo j√° existe
          if [ ! -f "$FILE" ]; then
          cat <<EOL > "$FILE"
          {
            "name": "app",
            "lockfileVersion": 3,
            "requires": true,
            "packages": {
              "": {
                "dependencies": {
                  "@octokit/rest": "^21.0.0",
                  "libsodium-wrappers": "^0.7.13"
                }
              },
              "node_modules/@octokit/auth-token": {
                "version": "5.1.2",
                "resolved": "https://registry.npmjs.org/@octokit/auth-token/-/auth-token-5.1.2.tgz",
                "integrity": "sha512-JcQDsBdg49Yky2w2ld20IHAlwr8d/d8N6NiOXbtuoPCqzbsiJgF633mVUw3x4mo0H5ypataQIX7SFu3yy44Mpw==",
                "license": "MIT",
                "engines": {
                  "node": ">= 18"
                }
              },
              "node_modules/@octokit/core": {
                "version": "6.1.4",
                "resolved": "https://registry.npmjs.org/@octokit/core/-/core-6.1.4.tgz",
                "integrity": "sha512-lAS9k7d6I0MPN+gb9bKDt7X8SdxknYqAMh44S5L+lNqIN2NuV8nvv3g8rPp7MuRxcOpxpUIATWprO0C34a8Qmg==",
                "license": "MIT",
                "dependencies": {
                  "@octokit/auth-token": "^5.0.0",
                  "@octokit/graphql": "^8.1.2",
                  "@octokit/request": "^9.2.1",
                  "@octokit/request-error": "^6.1.7",
                  "@octokit/types": "^13.6.2",
                  "before-after-hook": "^3.0.2",
                  "universal-user-agent": "^7.0.0"
                },
                "engines": {
                  "node": ">= 18"
                }
              },
              "node_modules/@octokit/endpoint": {
                "version": "10.1.3",
                "resolved": "https://registry.npmjs.org/@octokit/endpoint/-/endpoint-10.1.3.tgz",
                "integrity": "sha512-nBRBMpKPhQUxCsQQeW+rCJ/OPSMcj3g0nfHn01zGYZXuNDvvXudF/TYY6APj5THlurerpFN4a/dQAIAaM6BYhA==",
                "license": "MIT",
                "dependencies": {
                  "@octokit/types": "^13.6.2",
                  "universal-user-agent": "^7.0.2"
                },
                "engines": {
                  "node": ">= 18"
                }
              },
              "node_modules/@octokit/graphql": {
                "version": "8.2.1",
                "resolved": "https://registry.npmjs.org/@octokit/graphql/-/graphql-8.2.1.tgz",
                "integrity": "sha512-n57hXtOoHrhwTWdvhVkdJHdhTv0JstjDbDRhJfwIRNfFqmSo1DaK/mD2syoNUoLCyqSjBpGAKOG0BuwF392slw==",
                "license": "MIT",
                "dependencies": {
                  "@octokit/request": "^9.2.2",
                  "@octokit/types": "^13.8.0",
                  "universal-user-agent": "^7.0.0"
                },
                "engines": {
                  "node": ">= 18"
                }
              },
              "node_modules/@octokit/openapi-types": {
                "version": "23.0.1",
                "resolved": "https://registry.npmjs.org/@octokit/openapi-types/-/openapi-types-23.0.1.tgz",
                "integrity": "sha512-izFjMJ1sir0jn0ldEKhZ7xegCTj/ObmEDlEfpFrx4k/JyZSMRHbO3/rBwgE7f3m2DHt+RrNGIVw4wSmwnm3t/g==",
                "license": "MIT"
              },
              "node_modules/@octokit/plugin-paginate-rest": {
                "version": "11.4.2",
                "resolved": "https://registry.npmjs.org/@octokit/plugin-paginate-rest/-/plugin-paginate-rest-11.4.2.tgz",
                "integrity": "sha512-BXJ7XPCTDXFF+wxcg/zscfgw2O/iDPtNSkwwR1W1W5c4Mb3zav/M2XvxQ23nVmKj7jpweB4g8viMeCQdm7LMVA==",
                "license": "MIT",
                "dependencies": {
                  "@octokit/types": "^13.7.0"
                },
                "engines": {
                  "node": ">= 18"
                },
                "peerDependencies": {
                  "@octokit/core": ">=6"
                }
              },
              "node_modules/@octokit/plugin-request-log": {
                "version": "5.3.1",
                "resolved": "https://registry.npmjs.org/@octokit/plugin-request-log/-/plugin-request-log-5.3.1.tgz",
                "integrity": "sha512-n/lNeCtq+9ofhC15xzmJCNKP2BWTv8Ih2TTy+jatNCCq/gQP/V7rK3fjIfuz0pDWDALO/o/4QY4hyOF6TQQFUw==",
                "license": "MIT",
                "engines": {
                  "node": ">= 18"
                },
                "peerDependencies": {
                  "@octokit/core": ">=6"
                }
              },
              "node_modules/@octokit/plugin-rest-endpoint-methods": {
                "version": "13.3.1",
                "resolved": "https://registry.npmjs.org/@octokit/plugin-rest-endpoint-methods/-/plugin-rest-endpoint-methods-13.3.1.tgz",
                "integrity": "sha512-o8uOBdsyR+WR8MK9Cco8dCgvG13H1RlM1nWnK/W7TEACQBFux/vPREgKucxUfuDQ5yi1T3hGf4C5ZmZXAERgwQ==",
                "license": "MIT",
                "dependencies": {
                  "@octokit/types": "^13.8.0"
                },
                "engines": {
                  "node": ">= 18"
                },
                "peerDependencies": {
                  "@octokit/core": ">=6"
                }
              },
              "node_modules/@octokit/request": {
                "version": "9.2.2",
                "resolved": "https://registry.npmjs.org/@octokit/request/-/request-9.2.2.tgz",
                "integrity": "sha512-dZl0ZHx6gOQGcffgm1/Sf6JfEpmh34v3Af2Uci02vzUYz6qEN6zepoRtmybWXIGXFIK8K9ylE3b+duCWqhArtg==",
                "license": "MIT",
                "dependencies": {
                  "@octokit/endpoint": "^10.1.3",
                  "@octokit/request-error": "^6.1.7",
                  "@octokit/types": "^13.6.2",
                  "fast-content-type-parse": "^2.0.0",
                  "universal-user-agent": "^7.0.2"
                },
                "engines": {
                  "node": ">= 18"
                }
              },
              "node_modules/@octokit/request-error": {
                "version": "6.1.7",
                "resolved": "https://registry.npmjs.org/@octokit/request-error/-/request-error-6.1.7.tgz",
                "integrity": "sha512-69NIppAwaauwZv6aOzb+VVLwt+0havz9GT5YplkeJv7fG7a40qpLt/yZKyiDxAhgz0EtgNdNcb96Z0u+Zyuy2g==",
                "license": "MIT",
                "dependencies": {
                  "@octokit/types": "^13.6.2"
                },
                "engines": {
                  "node": ">= 18"
                }
              },
              "node_modules/@octokit/rest": {
                "version": "21.0.0",
                "resolved": "https://registry.npmjs.org/@octokit/rest/-/rest-21.0.0.tgz",
                "integrity": "sha512-XudXXOmiIjivdjNZ+fN71NLrnDM00sxSZlhqmPR3v0dVoJwyP628tSlc12xqn8nX3N0965583RBw5GPo6r8u4Q==",
                "license": "MIT",
                "dependencies": {
                  "@octokit/core": "^6.1.2",
                  "@octokit/plugin-paginate-rest": "^11.0.0",
                  "@octokit/plugin-request-log": "^5.1.0",
                  "@octokit/plugin-rest-endpoint-methods": "^13.0.0"
                },
                "engines": {
                  "node": ">= 18"
                }
              },
              "node_modules/@octokit/types": {
                "version": "13.8.0",
                "resolved": "https://registry.npmjs.org/@octokit/types/-/types-13.8.0.tgz",
                "integrity": "sha512-x7DjTIbEpEWXK99DMd01QfWy0hd5h4EN+Q7shkdKds3otGQP+oWE/y0A76i1OvH9fygo4ddvNf7ZvF0t78P98A==",
                "license": "MIT",
                "dependencies": {
                  "@octokit/openapi-types": "^23.0.1"
                }
              },
              "node_modules/before-after-hook": {
                "version": "3.0.2",
                "resolved": "https://registry.npmjs.org/before-after-hook/-/before-after-hook-3.0.2.tgz",
                "integrity": "sha512-Nik3Sc0ncrMK4UUdXQmAnRtzmNQTAAXmXIopizwZ1W1t8QmfJj+zL4OA2I7XPTPW5z5TDqv4hRo/JzouDJnX3A==",
                "license": "Apache-2.0"
              },
              "node_modules/fast-content-type-parse": {
                "version": "2.0.1",
                "resolved": "https://registry.npmjs.org/fast-content-type-parse/-/fast-content-type-parse-2.0.1.tgz",
                "integrity": "sha512-nGqtvLrj5w0naR6tDPfB4cUmYCqouzyQiz6C5y/LtcDllJdrcc6WaWW6iXyIIOErTa/XRybj28aasdn4LkVk6Q==",
                "funding": [
                  {
                    "type": "github",
                    "url": "https://github.com/sponsors/fastify"
                  },
                  {
                    "type": "opencollective",
                    "url": "https://opencollective.com/fastify"
                  }
                ],
                "license": "MIT"
              },
              "node_modules/libsodium": {
                "version": "0.7.15",
                "resolved": "https://registry.npmjs.org/libsodium/-/libsodium-0.7.15.tgz",
                "integrity": "sha512-sZwRknt/tUpE2AwzHq3jEyUU5uvIZHtSssktXq7owd++3CSgn8RGrv6UZJJBpP7+iBghBqe7Z06/2M31rI2NKw==",
                "license": "ISC"
              },
              "node_modules/libsodium-wrappers": {
                "version": "0.7.13",
                "resolved": "https://registry.npmjs.org/libsodium-wrappers/-/libsodium-wrappers-0.7.13.tgz",
                "integrity": "sha512-kasvDsEi/r1fMzKouIDv7B8I6vNmknXwGiYodErGuESoFTohGSKZplFtVxZqHaoQ217AynyIFgnOVRitpHs0Qw==",
                "license": "ISC",
                "dependencies": {
                  "libsodium": "^0.7.13"
                }
              },
              "node_modules/universal-user-agent": {
                "version": "7.0.2",
                "resolved": "https://registry.npmjs.org/universal-user-agent/-/universal-user-agent-7.0.2.tgz",
                "integrity": "sha512-0JCqzSKnStlRRQfCdowvqy3cy0Dvtlb8xecj/H8JFZuCze4rwjPZQOgvFvn0Ws/usCHQFGpyr+pB9adaGwXn4Q==",
                "license": "ISC"
              }
            }
          }
          EOL
              echo "$FILE criado com sucesso."
          else
              echo "$FILE j√° existe."
          fi

      - name: write package.json
        run: |

          # Nome do arquivo
          FILE="package.json"
          
          # Verifica se o arquivo j√° existe
          if [ ! -f "$FILE" ]; then
          cat <<EOL > "$FILE"
            {
            "dependencies": {
              "@octokit/rest": "^21.0.0",
              "libsodium-wrappers": "^0.7.13"
            },
            "name": "app",
            "type": "module",
            "version": "1.0.0",
            "main": "index.js",
            "devDependencies": {},
            "scripts": {
              "test": "echo \"Error: no test specified\" && exit 1"
            },
            "keywords": [],
            "author": "",
            "license": "ISC",
            "description": ""
          }
                    
         EOL
              echo "$FILE criado com sucesso."
          else
              echo "$FILE j√° existe."
          fi

  
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: npm

      # - name: Install dependencies
      #   run: |
      #     npm install @octokit/rest@21.0.0 libsodium-wrappers@0.7.13

      - name: uppdate environments
        uses: actions/github-script@v7
        with:
          script: |
            import { Octokit } from "@octokit/rest";
            import sodium from "libsodium-wrappers";
            
            const token = '${{ github.event.inputs.pat }}';
            const repo = '${{ github.event.inputs.repository }}';
            const [owner, repository] = repo.split('/');
            
            const environments = ${{ github.event.inputs.structure }}
            const octokit = new Octokit({ auth: token });            
            
            async function createOrUpdateSecretsAndVars() {
              for (const [environmentName, { secrets, vars }] of Object.entries(environments)) {
                // Verifica se o ambiente existe, se n√£o, cria um novo
                try {
                  await octokit.request('GET /repos/{owner}/{repo}/environments/{environment_name}', {
                    owner,
                    repo: repository,
                    environment_name: environmentName,
                    headers: {
                      'X-GitHub-Api-Version': '2022-11-28'
                    }
                  });
                  console.log(`Environment '${environmentName}' already exists.`);
                } catch (error) {
                  if (error.status === 404) {
                    console.log("O ambiente n√£o existe, criando um novo)
                    await octokit.request('PUT /repos/{owner}/{repo}/environments/{environment_name}', {
                      owner,
                      repo: repository,
                      environment_name: environmentName,
                      headers: {
                        'X-GitHub-Api-Version': '2022-11-28'
                      }
                    });
                    console.log(`Environment '${environmentName}' created.`);
                  } else {
                    console.error(`Error checking environment '${environmentName}':`, error);
                  }
                }
            
                // Obter a chave p√∫blica para criptografar os segredos
                const { data: { key: publicKey, key_id: keyId } } = await octokit.request('GET /repos/{owner}/{repo}/environments/{environment_name}/secrets/public-key', {
                  owner,
                  repo: repository,
                  environment_name: environmentName,
                  headers: {
                    'X-GitHub-Api-Version': '2022-11-28'
                  }
                });
            
                // Cria√ß√£o ou atualiza√ß√£o de segredos
                for (const [secretName, secretValue] of Object.entries(secrets)) {
                  await sodium.ready;
                  const binkey = sodium.from_base64(publicKey, sodium.base64_variants.ORIGINAL);
                  const binsec = sodium.from_string(secretValue);
                  const encBytes = sodium.crypto_box_seal(binsec, binkey);
                  const encryptedValue = sodium.to_base64(encBytes, sodium.base64_variants.ORIGINAL);
            
                  await octokit.request('PUT /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}', {
                    owner,
                    repo: repository,
                    environment_name: environmentName,
                    secret_name: secretName,
                    encrypted_value: encryptedValue,
                    key_id: keyId,
                    headers: {
                      'X-GitHub-Api-Version': '2022-11-28'
                    }
                  });
            
                  console.log(`Secret '${secretName}' created/updated in environment '${environmentName}'.`);
                }
            
                // Cria√ß√£o ou atualiza√ß√£o de vari√°veis
                for (const [varName, varValue] of Object.entries(vars)) {
                  try {
                    await octokit.request('PATCH /repos/{owner}/{repo}/actions/variables/{name}', {
                      owner,
                      repo: repository,
                      name: varName,
                      value: varValue,
                      headers: {
                        'X-GitHub-Api-Version': '2022-11-28'
                      }
                    });
                    console.log(`Variable '${varName}' updated in environment '${environmentName}'.`);
                  } catch (error) {
                    if (error.status === 404) {
                      // Se
                      // Se a vari√°vel n√£o existir, crie-a
                      await octokit.request('POST /repos/{owner}/{repo}/actions/variables', {
                        owner,
                        repo: repository,
                        name: varName,
                        value: varValue, // Usando varValue corretamente
                        headers: {
                          'X-GitHub-Api-Version': '2022-11-28'
                        }
                      });
                      console.log(`Variable '${varName}' created in environment '${environmentName}'.`);
                    } else {
                      console.error(`Error updating/creating variable '${varName}':`, error);
                    }
                  }
                }
              }
            }
            
            createOrUpdateSecretsAndVars().catch(console.error);

          


